/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.ListaDoble;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Workstation
 */
public final class frmMenu extends javax.swing.JFrame {

    /**
     * Creates new form frmMenu
     */
    DefaultTableModel tabla;
    ListaDoble ListaDoble;
    private int Id = 0;

    //limpia los combos cada vez que se ordena
    private void reiniciaCombos() {
        polloCerdoCant.setSelectedIndex(0);
        nuggetsCant.setSelectedIndex(0);
        pinchosCant.setSelectedIndex(0);
        costillaCerdoCant.setSelectedIndex(0);
        trozosPolloCant.setSelectedIndex(0);
        polloAsadoCant.setSelectedIndex(0);
        hamburguesaCant.setSelectedIndex(0);
        papasCant.setSelectedIndex(0);
        arosdeCebollaCant.setSelectedIndex(0);
    }

    //bloquea la edicion del campo de los precios de menu para lo clientes
    private void lock() {
        polloCerdoPrecio.enable(false);
        nuggetsPrecio.enable(false);
        pinchosPrecio.enable(false);
        costillaCerdoPrecio.enable(false);
        trozosPolloPrecio.enable(false);
        polloAsadoPrecio.enable(false);
        hamburguesaPrecio.enable(false);
        papasPrecio.enable(false);
        arosCebollaPrecio.enable(false);

    }

    public frmMenu(String cliente, int Mesa, int ID) {
        initComponents();
        cerrar();
        cargarTabla();
        clientes.setText(cliente);
        Id = ID;
        mesa.setText(Integer.toString(Mesa));
//        TabladePedidos.setText(ListaDoble.printID(Id));
        totalsuma.setText(ListaDoble.facturaTotal(Id));
        lock();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcionesPanel = new javax.swing.JPanel();
        polloCerdoLogo = new javax.swing.JLabel();
        polloCerdoTitulo = new javax.swing.JLabel();
        polloCerdo = new javax.swing.JLabel();
        polloCerdoPrecio = new javax.swing.JTextField();
        polloCerdoLogo1 = new javax.swing.JLabel();
        nuggetsTitulo = new javax.swing.JLabel();
        nuggets = new javax.swing.JLabel();
        nuggetsPrecio = new javax.swing.JTextField();
        pinchosLogo = new javax.swing.JLabel();
        pinchosTitulo = new javax.swing.JLabel();
        pinchos = new javax.swing.JLabel();
        pinchosPrecio = new javax.swing.JTextField();
        costillaCerdoTitulo = new javax.swing.JLabel();
        costillaCerdoLogo = new javax.swing.JLabel();
        costillaCerdo = new javax.swing.JLabel();
        costillaCerdoPrecio = new javax.swing.JTextField();
        trozosPolloTitulo = new javax.swing.JLabel();
        trozosPolloLogo = new javax.swing.JLabel();
        trozosPollo = new javax.swing.JLabel();
        trozosPolloPrecio = new javax.swing.JTextField();
        polloAsadoTitulo = new javax.swing.JLabel();
        polloAsadoLogo = new javax.swing.JLabel();
        polloAsado = new javax.swing.JLabel();
        polloAsadoPrecio = new javax.swing.JTextField();
        hamburguesaTitulo = new javax.swing.JLabel();
        hamburguesaLogo = new javax.swing.JLabel();
        hamburguesa = new javax.swing.JLabel();
        hamburguesaPrecio = new javax.swing.JTextField();
        papasTitulo = new javax.swing.JLabel();
        papasLogo = new javax.swing.JLabel();
        papas = new javax.swing.JLabel();
        papasPrecio = new javax.swing.JTextField();
        arosCebollaTitulo = new javax.swing.JLabel();
        arosCebollaLogo = new javax.swing.JLabel();
        arosCebolla = new javax.swing.JLabel();
        arosCebollaPrecio = new javax.swing.JTextField();
        cantidad1 = new javax.swing.JLabel();
        polloCerdoCant = new javax.swing.JComboBox<>();
        cantidad2 = new javax.swing.JLabel();
        costillaCerdoCant = new javax.swing.JComboBox<>();
        cantidad3 = new javax.swing.JLabel();
        hamburguesaCant = new javax.swing.JComboBox<>();
        cantidad4 = new javax.swing.JLabel();
        nuggetsCant = new javax.swing.JComboBox<>();
        cantidad5 = new javax.swing.JLabel();
        trozosPolloCant = new javax.swing.JComboBox<>();
        cantidad6 = new javax.swing.JLabel();
        papasCant = new javax.swing.JComboBox<>();
        cantidad7 = new javax.swing.JLabel();
        pinchosCant = new javax.swing.JComboBox<>();
        cantidad8 = new javax.swing.JLabel();
        polloAsadoCant = new javax.swing.JComboBox<>();
        arosCebollaCant = new javax.swing.JLabel();
        arosdeCebollaCant = new javax.swing.JComboBox<>();
        logoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        btnOrdenar = new javax.swing.JButton();
        btnListaMesas = new javax.swing.JLabel();
        btnMenuAdmi = new javax.swing.JLabel();
        btnListaMesasCliente = new javax.swing.JLabel();
        btnListaMesas1 = new javax.swing.JLabel();
        listaPanel = new javax.swing.JPanel();
        registroTitulo = new javax.swing.JLabel();
        clienteLabel = new javax.swing.JLabel();
        mesaLabel = new javax.swing.JLabel();
        clientes = new javax.swing.JTextField();
        mesa = new javax.swing.JTextField();
        totalLabel = new javax.swing.JLabel();
        totalsuma = new javax.swing.JLabel();
        btnPagar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaOrdenes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BBQ Party Restaurant");
        setBackground(new java.awt.Color(255, 255, 255));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        opcionesPanel.setBackground(new java.awt.Color(255, 255, 255));
        opcionesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        polloCerdoLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/pinto_new_cr_v2.png"))); // NOI18N
        opcionesPanel.add(polloCerdoLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 155, 81));

        polloCerdoTitulo.setForeground(new java.awt.Color(0, 0, 0));
        polloCerdoTitulo.setText("Pinto con Huevo");
        opcionesPanel.add(polloCerdoTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        polloCerdo.setForeground(new java.awt.Color(0, 0, 0));
        polloCerdo.setText("Precio");
        opcionesPanel.add(polloCerdo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));

        polloCerdoPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        polloCerdoPrecio.setText("6400");
        opcionesPanel.add(polloCerdoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, -1, -1));

        polloCerdoLogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/520-5206558_beef-regular-price.png"))); // NOI18N
        opcionesPanel.add(polloCerdoLogo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, -1, 100));

        nuggetsTitulo.setForeground(new java.awt.Color(0, 0, 0));
        nuggetsTitulo.setText("La Empanada Grasosa");
        opcionesPanel.add(nuggetsTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, -1, -1));

        nuggets.setForeground(new java.awt.Color(0, 0, 0));
        nuggets.setText("Precio");
        opcionesPanel.add(nuggets, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 430, -1, -1));

        nuggetsPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nuggetsPrecio.setText("3500");
        opcionesPanel.add(nuggetsPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 430, -1, -1));

        pinchosLogo.setForeground(new java.awt.Color(255, 255, 255));
        pinchosLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/gallitos-faciles-de-preparar.png"))); // NOI18N
        opcionesPanel.add(pinchosLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, -1, 100));

        pinchosTitulo.setForeground(new java.awt.Color(0, 0, 0));
        pinchosTitulo.setText("Gallo de Salchichon");
        opcionesPanel.add(pinchosTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, -1, -1));

        pinchos.setForeground(new java.awt.Color(0, 0, 0));
        pinchos.setText("Precio");
        opcionesPanel.add(pinchos, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 420, -1, -1));

        pinchosPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pinchosPrecio.setText("5200");
        opcionesPanel.add(pinchosPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 420, -1, -1));

        costillaCerdoTitulo.setForeground(new java.awt.Color(0, 0, 0));
        costillaCerdoTitulo.setText("Ravioles");
        opcionesPanel.add(costillaCerdoTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, -1, -1));

        costillaCerdoLogo.setForeground(new java.awt.Color(255, 255, 255));
        costillaCerdoLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/Ravioles.png"))); // NOI18N
        opcionesPanel.add(costillaCerdoLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, -1, 100));

        costillaCerdo.setForeground(new java.awt.Color(0, 0, 0));
        costillaCerdo.setText("Precio");
        opcionesPanel.add(costillaCerdo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 610, -1, -1));

        costillaCerdoPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        costillaCerdoPrecio.setText("7800");
        opcionesPanel.add(costillaCerdoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 600, -1, -1));

        trozosPolloTitulo.setForeground(new java.awt.Color(0, 0, 0));
        trozosPolloTitulo.setText("Tamales");
        opcionesPanel.add(trozosPolloTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 470, -1, -1));

        trozosPolloLogo.setForeground(new java.awt.Color(255, 255, 255));
        trozosPolloLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/Tamales.png"))); // NOI18N
        opcionesPanel.add(trozosPolloLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 500, 110, 87));

        trozosPollo.setForeground(new java.awt.Color(0, 0, 0));
        trozosPollo.setText("Precio");
        opcionesPanel.add(trozosPollo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 610, -1, -1));

        trozosPolloPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        trozosPolloPrecio.setText("5600");
        opcionesPanel.add(trozosPolloPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, -1, -1));

        polloAsadoTitulo.setForeground(new java.awt.Color(0, 0, 0));
        polloAsadoTitulo.setText("Tacos X2");
        opcionesPanel.add(polloAsadoTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 470, -1, -1));

        polloAsadoLogo.setForeground(new java.awt.Color(255, 255, 255));
        polloAsadoLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/58727fe0f3a71010b5e8ef0d.png"))); // NOI18N
        opcionesPanel.add(polloAsadoLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 500, -1, -1));

        polloAsado.setForeground(new java.awt.Color(0, 0, 0));
        polloAsado.setText("Precio");
        opcionesPanel.add(polloAsado, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 600, -1, -1));

        polloAsadoPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        polloAsadoPrecio.setText("6700");
        opcionesPanel.add(polloAsadoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 600, -1, -1));

        hamburguesaTitulo.setForeground(new java.awt.Color(0, 0, 0));
        hamburguesaTitulo.setText("Hamburguesa ");
        opcionesPanel.add(hamburguesaTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 650, -1, -1));

        hamburguesaLogo.setForeground(new java.awt.Color(255, 255, 255));
        hamburguesaLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/comida_11.png"))); // NOI18N
        opcionesPanel.add(hamburguesaLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 670, 138, 87));

        hamburguesa.setForeground(new java.awt.Color(0, 0, 0));
        hamburguesa.setText("Precio");
        opcionesPanel.add(hamburguesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 770, -1, -1));

        hamburguesaPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        hamburguesaPrecio.setText("7200");
        opcionesPanel.add(hamburguesaPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 760, -1, -1));

        papasTitulo.setForeground(new java.awt.Color(0, 0, 0));
        papasTitulo.setText("Reposteria");
        opcionesPanel.add(papasTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 650, -1, -1));

        papasLogo.setForeground(new java.awt.Color(255, 255, 255));
        papasLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/Cupcake-PNG-Photos.png"))); // NOI18N
        opcionesPanel.add(papasLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 670, -1, 100));

        papas.setForeground(new java.awt.Color(0, 0, 0));
        papas.setText("Precio");
        opcionesPanel.add(papas, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 780, -1, -1));

        papasPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        papasPrecio.setText("2400");
        opcionesPanel.add(papasPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 770, -1, -1));

        arosCebollaTitulo.setForeground(new java.awt.Color(0, 0, 0));
        arosCebollaTitulo.setText("Sandwich");
        opcionesPanel.add(arosCebollaTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 640, -1, -1));

        arosCebollaLogo.setForeground(new java.awt.Color(255, 255, 255));
        arosCebollaLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/580b57fcd9996e24bc43c1ef.png"))); // NOI18N
        opcionesPanel.add(arosCebollaLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 659, 153, 100));

        arosCebolla.setForeground(new java.awt.Color(0, 0, 0));
        arosCebolla.setText("Precio");
        opcionesPanel.add(arosCebolla, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 780, -1, -1));

        arosCebollaPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        arosCebollaPrecio.setText("2400");
        opcionesPanel.add(arosCebollaPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 770, -1, -1));

        cantidad1.setForeground(new java.awt.Color(0, 0, 0));
        cantidad1.setText("Cantidad");
        opcionesPanel.add(cantidad1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, -1, -1));

        polloCerdoCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(polloCerdoCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, -1, -1));

        cantidad2.setForeground(new java.awt.Color(0, 0, 0));
        cantidad2.setText("Cantidad");
        opcionesPanel.add(cantidad2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 610, -1, -1));

        costillaCerdoCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(costillaCerdoCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 600, -1, -1));

        cantidad3.setForeground(new java.awt.Color(0, 0, 0));
        cantidad3.setText("Cantidad");
        opcionesPanel.add(cantidad3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 770, -1, -1));

        hamburguesaCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(hamburguesaCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 760, -1, -1));

        cantidad4.setForeground(new java.awt.Color(0, 0, 0));
        cantidad4.setText("Cantidad");
        opcionesPanel.add(cantidad4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, -1, -1));

        nuggetsCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(nuggetsCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, -1, -1));

        cantidad5.setForeground(new java.awt.Color(0, 0, 0));
        cantidad5.setText("Cantidad");
        opcionesPanel.add(cantidad5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 610, -1, -1));

        trozosPolloCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(trozosPolloCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 600, -1, -1));

        cantidad6.setForeground(new java.awt.Color(0, 0, 0));
        cantidad6.setText("Cantidad");
        opcionesPanel.add(cantidad6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 780, -1, -1));

        papasCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(papasCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 770, -1, -1));

        cantidad7.setForeground(new java.awt.Color(0, 0, 0));
        cantidad7.setText("Cantidad");
        opcionesPanel.add(cantidad7, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 420, -1, -1));

        pinchosCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(pinchosCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 420, -1, -1));

        cantidad8.setForeground(new java.awt.Color(0, 0, 0));
        cantidad8.setText("Cantidad");
        opcionesPanel.add(cantidad8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 600, -1, -1));

        polloAsadoCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(polloAsadoCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 600, -1, -1));

        arosCebollaCant.setForeground(new java.awt.Color(0, 0, 0));
        arosCebollaCant.setText("Cantidad");
        opcionesPanel.add(arosCebollaCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 780, -1, -1));

        arosdeCebollaCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        opcionesPanel.add(arosdeCebollaCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 770, -1, -1));

        logoPanel.setBackground(new java.awt.Color(255, 255, 255));
        logoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("French Script MT", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Soda y Panaderia San Blas");
        logoPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, -1, -1));

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICS/8420261.jpg"))); // NOI18N
        logoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoLabelMouseClicked(evt);
            }
        });
        logoPanel.add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });
        logoPanel.add(btnOrdenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, -1, -1));

        btnListaMesas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnListaMesas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListaMesasMouseClicked(evt);
            }
        });
        logoPanel.add(btnListaMesas, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 50, 45));

        btnMenuAdmi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnMenuAdmi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMenuAdmiMouseClicked(evt);
            }
        });
        logoPanel.add(btnMenuAdmi, new org.netbeans.lib.awtextra.AbsoluteConstraints(713, 12, 50, 45));

        btnListaMesasCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnListaMesasCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListaMesasClienteMouseClicked(evt);
            }
        });
        logoPanel.add(btnListaMesasCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(713, 174, 50, 45));

        btnListaMesas1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnListaMesas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListaMesas1MouseClicked(evt);
            }
        });
        logoPanel.add(btnListaMesas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 92, 50, 45));

        opcionesPanel.add(logoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        listaPanel.setBackground(new java.awt.Color(255, 255, 255));

        registroTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        registroTitulo.setText("Registro de Ordenes");

        clienteLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clienteLabel.setText("Cliente: ");

        mesaLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mesaLabel.setText("Mesa:");

        clientes.setEnabled(false);

        mesa.setEditable(false);
        mesa.setEnabled(false);

        totalLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalLabel.setText("Total:  ¢");

        totalsuma.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        totalsuma.setText(" ");

        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        tablaOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comida", "Cantidad", "Precio", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaOrdenes.setEnabled(false);
        jScrollPane2.setViewportView(tablaOrdenes);

        javax.swing.GroupLayout listaPanelLayout = new javax.swing.GroupLayout(listaPanel);
        listaPanel.setLayout(listaPanelLayout);
        listaPanelLayout.setHorizontalGroup(
            listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaPanelLayout.createSequentialGroup()
                .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clienteLabel)
                    .addComponent(mesaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mesa)
                    .addComponent(clientes, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addGap(64, 64, 64)
                .addComponent(totalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalsuma)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(listaPanelLayout.createSequentialGroup()
                .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaPanelLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(registroTitulo))
                    .addGroup(listaPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );
        listaPanelLayout.setVerticalGroup(
            listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaPanelLayout.createSequentialGroup()
                        .addComponent(registroTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clienteLabel)
                            .addComponent(clientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mesaLabel)
                            .addComponent(mesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(listaPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(listaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalLabel)
                            .addComponent(totalsuma))))
                .addGap(56, 56, 56)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(btnPagar)
                .addGap(166, 166, 166))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(opcionesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(listaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(opcionesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //METODO PARA CARGAR LA NUEVA TABLA CUANDO SE INICIA LA INTERFAZ DEL MENU
    private void cargarTabla() {
        tabla = new DefaultTableModel();
        tabla.addColumn("Comida");
        tabla.addColumn("Cantidad");
        tabla.addColumn("Precio");
        tabla.addColumn("Total");
        this.tablaOrdenes.setModel(tabla);
    }

    //almacena datos en sus respectivos campos al pagar y elimina el registro del cliente
    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        // TODO add your handling code here:
        if (ListaDoble.facturaTotal(Id).equals("0")) {
            JOptionPane.showMessageDialog(null, "No tiene pendientes de pago", "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            frmRegistroUsuarioPagar pagar = new frmRegistroUsuarioPagar(clientes.getText(),Integer.parseInt(mesa.getText()),Id);
            this.dispose();
            pagar.setVisible(true);
        }

    }//GEN-LAST:event_btnPagarActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        keyTyped(evt);
    }//GEN-LAST:event_formKeyReleased

    private void btnListaMesas1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListaMesas1MouseClicked
        // TODO add your handling code here:
        //        frmListaMesasCliente mesas = new frmListaMesasCliente();
        //        mesas.setVisible(true);
    }//GEN-LAST:event_btnListaMesas1MouseClicked

    private void btnListaMesasClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListaMesasClienteMouseClicked
        // TODO add your handling code here:
        frmListaMesasCliente mesas = new frmListaMesasCliente();
        mesas.setVisible(true);
    }//GEN-LAST:event_btnListaMesasClienteMouseClicked

    private void btnMenuAdmiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMenuAdmiMouseClicked
        // TODO add your handling code here:
        frmMenuAdm menuAdmi = new frmMenuAdm();
        menuAdmi.setVisible(true);
    }//GEN-LAST:event_btnMenuAdmiMouseClicked

    private void btnListaMesasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListaMesasMouseClicked
        // TODO add your handling code here:
        frmListaMesas listaMesas = new frmListaMesas();
        listaMesas.setVisible(true);
    }//GEN-LAST:event_btnListaMesasMouseClicked

    //al ordenar almacena los datos en un JTable y reinicia la cantidad a 0 de cada comida
    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // TODO add your handling code here:

        //CREA LA TABLA QUE VA A RECIBIR LA ORDEN
        String[] dato = new String[4];

        //AGREGA LOS PEDIDOS A LAS COLUMNAS RESPECTIVAS
        if (!polloCerdoCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(polloCerdoPrecio.getText());
            int cant = Integer.parseInt(polloCerdoCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = polloCerdoTitulo.getText();
            dato[1] = polloCerdoCant.getSelectedItem().toString();
            dato[2] = polloCerdoPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!costillaCerdoCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(costillaCerdoPrecio.getText());
            int cant = Integer.parseInt(costillaCerdoCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = costillaCerdoTitulo.getText();
            dato[1] = costillaCerdoCant.getSelectedItem().toString();
            dato[2] = costillaCerdoPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!hamburguesaCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(hamburguesaPrecio.getText());
            int cant = Integer.parseInt(hamburguesaCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = hamburguesaTitulo.getText();
            dato[1] = hamburguesaCant.getSelectedItem().toString();
            dato[2] = hamburguesaPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!nuggetsCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(nuggetsPrecio.getText());
            int cant = Integer.parseInt(nuggetsCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = nuggetsTitulo.getText();
            dato[1] = nuggetsCant.getSelectedItem().toString();
            dato[2] = nuggetsPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!trozosPolloCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(trozosPolloPrecio.getText());
            int cant = Integer.parseInt(trozosPolloCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = trozosPolloTitulo.getText();
            dato[1] = trozosPolloCant.getSelectedItem().toString();
            dato[2] = trozosPolloPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!papasCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(papasPrecio.getText());
            int cant = Integer.parseInt(papasCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = papasTitulo.getText();
            dato[1] = papasCant.getSelectedItem().toString();
            dato[2] = papasPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!pinchosCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(pinchosPrecio.getText());
            int cant = Integer.parseInt(pinchosCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = pinchosTitulo.getText();
            dato[1] = pinchosCant.getSelectedItem().toString();
            dato[2] = pinchosPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!polloAsadoCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(polloAsadoPrecio.getText());
            int cant = Integer.parseInt(polloAsadoCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = polloAsadoTitulo.getText();
            dato[1] = polloAsadoCant.getSelectedItem().toString();
            dato[2] = polloAsadoPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        if (!arosdeCebollaCant.getSelectedItem().equals("0")) {
            int precio = Integer.parseInt(arosCebollaPrecio.getText());
            int cant = Integer.parseInt(arosdeCebollaCant.getSelectedItem().toString());
            int total = precio * cant;
            dato[0] = arosCebollaTitulo.getText();
            dato[1] = arosdeCebollaCant.getSelectedItem().toString();
            dato[2] = arosCebollaPrecio.getText();
            dato[3] = Integer.toString(total);
            tabla.addRow(dato);
        }

        hamburguesaPrecio.enable(false);
        papasPrecio.enable(false);
        arosCebollaPrecio.enable(false);

        if (polloCerdoCant.getSelectedItem().equals("0") && nuggetsCant.getSelectedItem().equals("0")
            && pinchosCant.getSelectedItem().equals("0") && costillaCerdoCant.getSelectedItem().equals("0")
            && trozosPolloCant.getSelectedItem().equals("0") && polloAsadoCant.getSelectedItem().equals("0")
            && hamburguesaCant.getSelectedItem().equals("0") && papasCant.getSelectedItem().equals("0")
            && arosdeCebollaCant.getSelectedItem().equals("0")) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos un item del menu para poder realizar una orden", "Error", JOptionPane.ERROR_MESSAGE);

        } else
        {
            if (!polloCerdoCant.getSelectedItem().equals("0"))
            {
                if(ListaDoble.buscaPedido(mesa.getText(),polloCerdoTitulo.getText(),Integer.parseInt(polloCerdoCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, polloCerdoTitulo.getText(), Integer.parseInt(polloCerdoCant.getSelectedItem().toString()), Integer.parseInt(polloCerdoPrecio.getText()));
            }

            if (!nuggetsCant.getSelectedItem().equals("0")) {
                if(ListaDoble.buscaPedido(mesa.getText(),nuggetsTitulo.getText(),Integer.parseInt(nuggetsCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, nuggetsTitulo.getText(), Integer.parseInt(nuggetsCant.getSelectedItem().toString()), Integer.parseInt(nuggetsPrecio.getText()));
            }

            if (!pinchosCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),pinchosTitulo.getText(),Integer.parseInt(pinchosCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, pinchosTitulo.getText(), Integer.parseInt(pinchosCant.getSelectedItem().toString()), Integer.parseInt(pinchosPrecio.getText()));
            }

            if (!costillaCerdoCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),costillaCerdoTitulo.getText(),Integer.parseInt(costillaCerdoCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, costillaCerdoTitulo.getText(), Integer.parseInt(costillaCerdoCant.getSelectedItem().toString()), Integer.parseInt(costillaCerdoPrecio.getText()));
            }

            if (!papasCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),papasTitulo.getText(),Integer.parseInt(papasCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, papasTitulo.getText(), Integer.parseInt(papasCant.getSelectedItem().toString()), Integer.parseInt(papasPrecio.getText()));
            }

            if (!trozosPolloCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),trozosPolloTitulo.getText(),Integer.parseInt(trozosPolloCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, trozosPolloTitulo.getText(), Integer.parseInt(trozosPolloCant.getSelectedItem().toString()), Integer.parseInt(trozosPolloPrecio.getText()));
            }

            if (!polloAsadoCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),polloAsadoTitulo.getText(),Integer.parseInt(polloAsadoCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, polloAsadoTitulo.getText(), Integer.parseInt(polloAsadoCant.getSelectedItem().toString()), Integer.parseInt(polloAsadoPrecio.getText()));
            }

            if (!hamburguesaCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),hamburguesaTitulo.getText(),Integer.parseInt(hamburguesaCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, hamburguesaTitulo.getText(), Integer.parseInt(hamburguesaCant.getSelectedItem().toString()), Integer.parseInt(hamburguesaPrecio.getText()));
            }

            if (!arosdeCebollaCant.getSelectedItem().equals("0")) {

                if(ListaDoble.buscaPedido(mesa.getText(),arosCebollaTitulo.getText(),Integer.parseInt(arosdeCebollaCant.getSelectedItem().toString()))==false)
                ListaDoble.agregaNuevaOrden(Id, arosCebollaTitulo.getText(), Integer.parseInt(arosdeCebollaCant.getSelectedItem().toString()), Integer.parseInt(arosCebollaPrecio.getText()));
            }

            totalsuma.setText(ListaDoble.facturaTotal(Id));
            JOptionPane.showMessageDialog(null, "Pedido Realizado Exitosamente");
            reiniciaCombos();

        }
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void logoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoLabelMouseClicked
        // TODO add your handling code here:
        frmIniciar iniciar=new frmIniciar();
        iniciar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoLabelMouseClicked

    public void keyTyped(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_1) {
            frmListaMesas listaMesas = new frmListaMesas();
            listaMesas.setVisible(true);
        }
    }

    //valida al cerrar ventana
    public void cerrar() {
        try {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    confirmarSalida();
                }
            });
            this.setVisible(true);
        } catch (Exception e) {
        }
    }

    //devuelve advertencia al cerrar ventana
    public void confirmarSalida() {
        int valor = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea salir del programa?", "ALERTA", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            // new frmMenu().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arosCebolla;
    private javax.swing.JLabel arosCebollaCant;
    private javax.swing.JLabel arosCebollaLogo;
    private javax.swing.JTextField arosCebollaPrecio;
    private javax.swing.JLabel arosCebollaTitulo;
    private javax.swing.JComboBox<String> arosdeCebollaCant;
    private javax.swing.JLabel btnListaMesas;
    private javax.swing.JLabel btnListaMesas1;
    private javax.swing.JLabel btnListaMesasCliente;
    private javax.swing.JLabel btnMenuAdmi;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnPagar;
    private javax.swing.JLabel cantidad1;
    private javax.swing.JLabel cantidad2;
    private javax.swing.JLabel cantidad3;
    private javax.swing.JLabel cantidad4;
    private javax.swing.JLabel cantidad5;
    private javax.swing.JLabel cantidad6;
    private javax.swing.JLabel cantidad7;
    private javax.swing.JLabel cantidad8;
    private javax.swing.JLabel clienteLabel;
    private javax.swing.JTextField clientes;
    private javax.swing.JLabel costillaCerdo;
    private javax.swing.JComboBox<String> costillaCerdoCant;
    private javax.swing.JLabel costillaCerdoLogo;
    private javax.swing.JTextField costillaCerdoPrecio;
    private javax.swing.JLabel costillaCerdoTitulo;
    private javax.swing.JLabel hamburguesa;
    private javax.swing.JComboBox<String> hamburguesaCant;
    private javax.swing.JLabel hamburguesaLogo;
    private javax.swing.JTextField hamburguesaPrecio;
    private javax.swing.JLabel hamburguesaTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel listaPanel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JTextField mesa;
    private javax.swing.JLabel mesaLabel;
    private javax.swing.JLabel nuggets;
    private javax.swing.JComboBox<String> nuggetsCant;
    private javax.swing.JTextField nuggetsPrecio;
    private javax.swing.JLabel nuggetsTitulo;
    private javax.swing.JPanel opcionesPanel;
    private javax.swing.JLabel papas;
    private javax.swing.JComboBox<String> papasCant;
    private javax.swing.JLabel papasLogo;
    private javax.swing.JTextField papasPrecio;
    private javax.swing.JLabel papasTitulo;
    private javax.swing.JLabel pinchos;
    private javax.swing.JComboBox<String> pinchosCant;
    private javax.swing.JLabel pinchosLogo;
    private javax.swing.JTextField pinchosPrecio;
    private javax.swing.JLabel pinchosTitulo;
    private javax.swing.JLabel polloAsado;
    private javax.swing.JComboBox<String> polloAsadoCant;
    private javax.swing.JLabel polloAsadoLogo;
    private javax.swing.JTextField polloAsadoPrecio;
    private javax.swing.JLabel polloAsadoTitulo;
    private javax.swing.JLabel polloCerdo;
    private javax.swing.JComboBox<String> polloCerdoCant;
    private javax.swing.JLabel polloCerdoLogo;
    private javax.swing.JLabel polloCerdoLogo1;
    private javax.swing.JTextField polloCerdoPrecio;
    private javax.swing.JLabel polloCerdoTitulo;
    private javax.swing.JLabel registroTitulo;
    private javax.swing.JTable tablaOrdenes;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel totalsuma;
    private javax.swing.JLabel trozosPollo;
    private javax.swing.JComboBox<String> trozosPolloCant;
    private javax.swing.JLabel trozosPolloLogo;
    private javax.swing.JTextField trozosPolloPrecio;
    private javax.swing.JLabel trozosPolloTitulo;
    // End of variables declaration//GEN-END:variables
}
